#include "react/Utilities/reTMatrix.h"

// borrowed from MESA implementation
const reTMatrix reTMatrix::inverse() const {
  reFloat inv[16];

  inv[0] = v[5]  * v[10] * v[15] - 
           v[5]  * v[11] * v[14] - 
           v[9]  * v[6]  * v[15] + 
           v[9]  * v[7]  * v[14] +
           v[13] * v[6]  * v[11] - 
           v[13] * v[7]  * v[10];

  inv[4] = -v[4]  * v[10] * v[15] + 
            v[4]  * v[11] * v[14] + 
            v[8]  * v[6]  * v[15] - 
            v[8]  * v[7]  * v[14] - 
            v[12] * v[6]  * v[11] + 
            v[12] * v[7]  * v[10];

  inv[8] = v[4]  * v[9] * v[15] - 
           v[4]  * v[11] * v[13] - 
           v[8]  * v[5] * v[15] + 
           v[8]  * v[7] * v[13] + 
           v[12] * v[5] * v[11] - 
           v[12] * v[7] * v[9];

  inv[12] = -v[4]  * v[9] * v[14] + 
             v[4]  * v[10] * v[13] +
             v[8]  * v[5] * v[14] - 
             v[8]  * v[6] * v[13] - 
             v[12] * v[5] * v[10] + 
             v[12] * v[6] * v[9];

  inv[1] = -v[1]  * v[10] * v[15] + 
            v[1]  * v[11] * v[14] + 
            v[9]  * v[2] * v[15] - 
            v[9]  * v[3] * v[14] - 
            v[13] * v[2] * v[11] + 
            v[13] * v[3] * v[10];

  inv[5] = v[0]  * v[10] * v[15] - 
           v[0]  * v[11] * v[14] - 
           v[8]  * v[2] * v[15] + 
           v[8]  * v[3] * v[14] + 
           v[12] * v[2] * v[11] - 
           v[12] * v[3] * v[10];

  inv[9] = -v[0]  * v[9] * v[15] + 
            v[0]  * v[11] * v[13] + 
            v[8]  * v[1] * v[15] - 
            v[8]  * v[3] * v[13] - 
            v[12] * v[1] * v[11] + 
            v[12] * v[3] * v[9];

  inv[13] = v[0]  * v[9] * v[14] - 
            v[0]  * v[10] * v[13] - 
            v[8]  * v[1] * v[14] + 
            v[8]  * v[2] * v[13] + 
            v[12] * v[1] * v[10] - 
            v[12] * v[2] * v[9];

  inv[2] = v[1]  * v[6] * v[15] - 
           v[1]  * v[7] * v[14] - 
           v[5]  * v[2] * v[15] + 
           v[5]  * v[3] * v[14] + 
           v[13] * v[2] * v[7] - 
           v[13] * v[3] * v[6];

  inv[6] = -v[0]  * v[6] * v[15] + 
            v[0]  * v[7] * v[14] + 
            v[4]  * v[2] * v[15] - 
            v[4]  * v[3] * v[14] - 
            v[12] * v[2] * v[7] + 
            v[12] * v[3] * v[6];

  inv[10] = v[0]  * v[5] * v[15] - 
            v[0]  * v[7] * v[13] - 
            v[4]  * v[1] * v[15] + 
            v[4]  * v[3] * v[13] + 
            v[12] * v[1] * v[7] - 
            v[12] * v[3] * v[5];

  inv[14] = -v[0]  * v[5] * v[14] + 
             v[0]  * v[6] * v[13] + 
             v[4]  * v[1] * v[14] - 
             v[4]  * v[2] * v[13] - 
             v[12] * v[1] * v[6] + 
             v[12] * v[2] * v[5];

  inv[3] = -v[1] * v[6] * v[11] + 
            v[1] * v[7] * v[10] + 
            v[5] * v[2] * v[11] - 
            v[5] * v[3] * v[10] - 
            v[9] * v[2] * v[7] + 
            v[9] * v[3] * v[6];

  inv[7] = v[0] * v[6] * v[11] - 
           v[0] * v[7] * v[10] - 
           v[4] * v[2] * v[11] + 
           v[4] * v[3] * v[10] + 
           v[8] * v[2] * v[7] - 
           v[8] * v[3] * v[6];

  inv[11] = -v[0] * v[5] * v[11] + 
             v[0] * v[7] * v[9] + 
             v[4] * v[1] * v[11] - 
             v[4] * v[3] * v[9] - 
             v[8] * v[1] * v[7] + 
             v[8] * v[3] * v[5];

  inv[15] = v[0] * v[5] * v[10] - 
            v[0] * v[6] * v[9] - 
            v[4] * v[1] * v[10] + 
            v[4] * v[2] * v[9] + 
            v[8] * v[1] * v[6] - 
            v[8] * v[2] * v[5];

  reFloat det = v[0] * inv[0] + v[1] * inv[4] + v[2] * inv[8] + v[3] * inv[12];
  det = (det == 0.0) ? 1.0 / RE_FP_TOLERANCE : 1.0 / det;
  for (int i = 0; i < 16; i++){
    inv[i] *= det;
  }
  
  return reTMatrix(&inv[0]);
}
